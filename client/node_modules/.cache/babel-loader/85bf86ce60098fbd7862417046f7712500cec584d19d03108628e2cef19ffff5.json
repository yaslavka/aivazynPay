{"ast":null,"code":"/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar md5 = require('../vendor/md5/md5');\nvar RavenConfigError = require('./configError');\nvar utils = require('./utils');\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\nvar wrapConsoleMethod = require('./console').wrapMethod;\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback) ? function (data) {\n    return callback(data, original);\n  } : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.27.2',\n  debug: false,\n  TraceKit: TraceKit,\n  // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function (dsn, options) {\n    var self = this;\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function (key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length ? joinRegExp(globalOptions.ignoreUrls) : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length ? joinRegExp(globalOptions.whitelistUrls) : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(0, Math.min(globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function () {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function () {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n      self._patchFunctionToString();\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n      self._isRavenInstalled = true;\n    }\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function (dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n    self._globalServer = self._getGlobalServer(uri);\n    self._globalEndpoint = self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function (options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n    return this.wrap(options, func).apply(this, args);\n  },\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function (options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || options && options.deep !== false;\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n    return wrapped;\n  },\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function () {\n    TraceKit.report.uninstall();\n    this._detachPromiseRejectionHandler();\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n    this._restoreConsole();\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n    return this;\n  },\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function (event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function () {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener && _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function () {\n    _window.removeEventListener && _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function (ex, options) {\n    options = objectMerge({\n      trimHeadFrames: 0\n    }, options ? options : {});\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n      return this.captureMessage(message, objectMerge(options, {\n        // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n        // but it's barely any overhead so we may at least try\n        stacktrace: true,\n        trimHeadFrames: options.trimHeadFrames + 1\n      }));\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(ex, objectMerge(options, {\n        stacktrace: true,\n        // if we fall back to captureMessage, default to attempting a new trace\n        trimHeadFrames: options.trimHeadFrames + 1\n      }));\n    }\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n    return this;\n  },\n  _getCaptureExceptionOptionsFromPlainObject: function (currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message: 'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n    return options;\n  },\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function (msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n      return;\n    }\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge({\n      message: msg\n    }, options);\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n\n    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n    var fileurl = initialCall && initialCall.url || '';\n    if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) {\n      return;\n    }\n    if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) {\n      return;\n    }\n\n    // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n      options = objectMerge({\n        trimHeadFrames: 0\n      }, options);\n      // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n      options.trimHeadFrames += 1;\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Make sure that fingerprint is always wrapped in an array\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint) ? data.fingerprint : [data.fingerprint];\n    }\n\n    // Fire away!\n    this._send(data);\n    return this;\n  },\n  captureBreadcrumb: function (obj) {\n    var crumb = objectMerge({\n      timestamp: now() / 1000\n    }, obj);\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n  addPlugin: function (plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n    return this;\n  },\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function (user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n    return this;\n  },\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function (extra) {\n    this._mergeContext('extra', extra);\n    return this;\n  },\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function (tags) {\n    this._mergeContext('tags', tags);\n    return this;\n  },\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function () {\n    this._globalContext = {};\n    return this;\n  },\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function () {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function (environment) {\n    this._globalOptions.environment = environment;\n    return this;\n  },\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function (release) {\n    this._globalOptions.release = release;\n    return this;\n  },\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function (callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function (callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function (callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function (transport) {\n    this._globalOptions.transport = transport;\n    return this;\n  },\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function () {\n    return this._lastCapturedException;\n  },\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function () {\n    return this._lastEventId;\n  },\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function () {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n  afterLoad: function () {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n  showReportDialog: function (options) {\n    if (!_document // doesn't work without a document (React native)\n    ) return;\n    options = objectMerge({\n      eventId: this.lastEventId(),\n      dsn: this._dsn,\n      user: this._globalContext.user || {}\n    }, options);\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n    (_document.head || _document.body).appendChild(script);\n  },\n  /**** Private functions ****/\n  _ignoreNextOnError: function () {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function () {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n  _triggerEvent: function (eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n    if (!this._hasDocument) return;\n    options = options || {};\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n    for (key in options) if (hasKey(options, key)) {\n      evt[key] = options[key];\n    }\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function (evtName) {\n    var self = this;\n    return function (evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName,\n        // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function () {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function () {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function (from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) from = parsedFrom.relative;\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n  _patchFunctionToString: function () {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function () {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n  _unpatchFunctionToString: function () {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function () {\n    var self = this;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n    function wrapTimeFn(orig) {\n      return function (fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: orig.name || '<anonymous>'\n              }\n            }\n          }, originalCallback);\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(proto, 'addEventListener', function (orig) {\n          return function (evtName, fn, capture, secure) {\n            // preserve arity\n            try {\n              if (fn && fn.handleEvent) {\n                fn.handleEvent = self.wrap({\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      target: global,\n                      function: 'handleEvent',\n                      handler: fn && fn.name || '<anonymous>'\n                    }\n                  }\n                }, fn.handleEvent);\n              }\n            } catch (err) {\n              // can sometimes get 'Permission denied to access property \"handle Event'\n            }\n\n            // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n            // so that we don't have more than one wrapper function\n            var before, clickHandler, keypressHandler;\n            if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n              // NOTE: generating multiple handlers per addEventListener invocation, should\n              //       revisit and verify we can just use one (almost certainly)\n              clickHandler = self._breadcrumbEventHandler('click');\n              keypressHandler = self._keypressEventHandler();\n              before = function (evt) {\n                // need to intercept every DOM event in `before` argument, in case that\n                // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                // see #724\n                if (!evt) return;\n                var eventType;\n                try {\n                  eventType = evt.type;\n                } catch (e) {\n                  // just accessing event properties can throw an exception in some rare circumstances\n                  // see: https://github.com/getsentry/raven-js/issues/838\n                  return;\n                }\n                if (eventType === 'click') return clickHandler(evt);else if (eventType === 'keypress') return keypressHandler(evt);\n              };\n            }\n            return orig.call(this, evtName, self.wrap({\n              mechanism: {\n                type: 'instrument',\n                data: {\n                  target: global,\n                  function: 'addEventListener',\n                  handler: fn && fn.name || '<anonymous>'\n                }\n              }\n            }, fn, before), capture, secure);\n          };\n        }, wrappedBuiltIns);\n        fill(proto, 'removeEventListener', function (orig) {\n          return function (evt, fn, capture, secure) {\n            try {\n              fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n            } catch (e) {\n              // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n            }\n            return orig.call(this, evt, fn, capture, secure);\n          };\n        }, wrappedBuiltIns);\n      }\n    }\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(_window, 'requestAnimationFrame', function (orig) {\n        return function (cb) {\n          return orig(self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: 'requestAnimationFrame',\n                handler: orig && orig.name || '<anonymous>'\n              }\n            }\n          }, cb));\n        };\n      }, wrappedBuiltIns);\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function () {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function (orig) {\n          return self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: prop,\n                handler: orig && orig.name || '<anonymous>'\n              }\n            }\n          }, orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(xhrproto, 'open', function (origOpen) {\n        return function (method, url) {\n          // preserve arity\n\n          // if Sentry key appears in URL, don't capture\n          if (isString(url) && url.indexOf(self._globalKey) === -1) {\n            this.__raven_xhr = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n          }\n          return origOpen.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n      fill(xhrproto, 'send', function (origSend) {\n        return function () {\n          // preserve arity\n          var xhr = this;\n          function onreadystatechangeHandler() {\n            if (xhr.__raven_xhr && xhr.readyState === 4) {\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                xhr.__raven_xhr.status_code = xhr.status;\n              } catch (e) {\n                /* do nothing */\n              }\n              self.captureBreadcrumb({\n                type: 'http',\n                category: 'xhr',\n                data: xhr.__raven_xhr\n              });\n            }\n          }\n          var props = ['onload', 'onerror', 'onprogress'];\n          for (var j = 0; j < props.length; j++) {\n            wrapProp(props[j], xhr);\n          }\n          if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n            fill(xhr, 'onreadystatechange', function (orig) {\n              return self.wrap({\n                mechanism: {\n                  type: 'instrument',\n                  data: {\n                    function: 'onreadystatechange',\n                    handler: orig && orig.name || '<anonymous>'\n                  }\n                }\n              }, orig, onreadystatechangeHandler);\n            } /* intentionally don't track this instrumentation */);\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n          return origSend.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n    }\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(_window, 'fetch', function (origFetch) {\n        return function () {\n          // preserve arity\n          // Make a copy of the arguments to prevent deoptimization\n          // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n          var args = new Array(arguments.length);\n          for (var i = 0; i < args.length; ++i) {\n            args[i] = arguments[i];\n          }\n          var fetchInput = args[0];\n          var method = 'GET';\n          var url;\n          if (typeof fetchInput === 'string') {\n            url = fetchInput;\n          } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n            url = fetchInput.url;\n            if (fetchInput.method) {\n              method = fetchInput.method;\n            }\n          } else {\n            url = '' + fetchInput;\n          }\n\n          // if Sentry key appears in URL, don't capture, as it's our own request\n          if (url.indexOf(self._globalKey) !== -1) {\n            return origFetch.apply(this, args);\n          }\n          if (args[1] && args[1].method) {\n            method = args[1].method;\n          }\n          var fetchData = {\n            method: method,\n            url: url,\n            status_code: null\n          };\n          return origFetch.apply(this, args).then(function (response) {\n            fetchData.status_code = response.status;\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData\n            });\n            return response;\n          })['catch'](function (err) {\n            // if there is an error performing the request\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData,\n              level: 'error'\n            });\n            throw err;\n          });\n        };\n      }, wrappedBuiltIns);\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState = !isChromePackagedApp && _window.history && _window.history.pushState && _window.history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function () {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n      var historyReplacementFunction = function (origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function /* state, title, url */\n        () {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function (msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n      each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n  _restoreBuiltIns: function () {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n      obj[name] = orig;\n    }\n  },\n  _restoreConsole: function () {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n  _drainPlugins: function () {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function (_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n  _parseDSN: function (str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n    }\n    return dsn;\n  },\n  _getGlobalServer: function (uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n  _handleOnErrorStackInfo: function (stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    };\n\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n  _handleStackInfo: function (stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n    this._processException(stackInfo.name, stackInfo.message, stackInfo.url, stackInfo.lineno, frames, options);\n  },\n  _prepareFrames: function (stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function (i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n  _normalizeFrame: function (frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n    normalized.in_app = !(\n    // determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n\n    !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n    // Now we check for fun, if the function name is Raven or TraceKit\n    /(Raven|TraceKit)\\./.test(normalized['function']) ||\n    // finally, we do a last ditch effort and check for raven.min.js\n    /raven\\.(min\\.)?js$/.test(normalized.filename));\n    return normalized;\n  },\n  _processException: function (type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (!!this._globalOptions.ignoreErrors.test && (this._globalOptions.ignoreErrors.test(message) || this._globalOptions.ignoreErrors.test(prefixedMessage))) {\n      return;\n    }\n    var stacktrace;\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {\n        frames: frames\n      };\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [{\n          filename: fileurl,\n          lineno: lineno,\n          in_app: true\n        }]\n      };\n    }\n    if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) {\n      return;\n    }\n    if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) {\n      return;\n    }\n    var data = objectMerge({\n      // sentry.interfaces.Exception\n      exception: {\n        values: [{\n          type: type,\n          value: message,\n          stacktrace: stacktrace\n        }]\n      },\n      transaction: fileurl\n    }, options);\n    var ex = data.exception.values[0];\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    }\n\n    // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n    data.exception.mechanism = objectMerge({\n      type: 'generic',\n      handled: true\n    }, data.exception.mechanism || {});\n\n    // Fire away!\n    this._send(data);\n  },\n  _trimPacket: function (data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n    if (data.breadcrumbs && data.breadcrumbs.values) this._trimBreadcrumbs(data.breadcrumbs);\n    return data;\n  },\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function (breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (!crumb.hasOwnProperty('data') || !isObject(crumb.data) || objectFrozen(crumb.data)) continue;\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n  _getHttpData: function () {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n    return httpData;\n  },\n  _resetBackoff: function () {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n  _shouldBackoff: function () {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function (current) {\n    var last = this._lastData;\n    if (!last || current.message !== last.message ||\n    // defined for captureMessage\n    current.transaction !== last.transaction // defined for captureException/onerror\n    ) return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    } else if (current.fingerprint || last.fingerprint) {\n      return Boolean(current.fingerprint && last.fingerprint) && JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint);\n    }\n    return true;\n  },\n  _setBackoffState: function (request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n    this._backoffDuration = retry ?\n    // If Sentry server returned a Retry-After value, use it\n    retry :\n    // Otherwise, double the last backoff duration (starts at 1 sec)\n    this._backoffDuration * 2 || 1000;\n    this._backoffStart = now();\n  },\n  _send: function (data) {\n    var globalOptions = this._globalOptions;\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n    data = this._sanitizeData(data);\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function (key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n  _sanitizeData: function (data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n  _getUuid: function () {\n    return uuid4();\n  },\n  _sendProcessedPayload: function (data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n    this._logDebug('debug', 'Raven about to send:', data);\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (this._globalOptions.autoBreadcrumbs && this._globalOptions.autoBreadcrumbs.sentry) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception ? (exception.type ? exception.type + ': ' : '') + exception.value : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n  _makeRequest: function (opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n      return _window.fetch(url, fetchOptions).then(function (response) {\n        if (response.ok) {\n          opts.onSuccess && opts.onSuccess();\n        } else {\n          var error = new Error('Sentry error code: ' + response.status);\n          // It's called request only to keep compatibility with XHR interface\n          // and not add more redundant checks in setBackoffState method\n          error.request = response;\n          opts.onError && opts.onError(error);\n        }\n      })['catch'](function () {\n        opts.onError && opts.onError(new Error('Sentry error code: network unavailable'));\n      });\n    }\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n    if (!hasCORS) return;\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function () {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n    request.open('POST', url);\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function (key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n    request.send(stringify(opts.data));\n  },\n  _evaluateHash: function (hash) {\n    var evaluated = {};\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n    return evaluated;\n  },\n  _logDebug: function (level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (this._originalConsoleMethods[level] && (this.debug || this._globalOptions.debug)) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(this._originalConsoleMethods[level], this._originalConsole, [].slice.call(arguments, 1));\n    }\n  },\n  _mergeContext: function (key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\nmodule.exports = Raven;","map":{"version":3,"names":["TraceKit","require","stringify","md5","RavenConfigError","utils","isErrorEvent","isDOMError","isDOMException","isError","isObject","isPlainObject","isUndefined","isFunction","isString","isArray","isEmptyObject","each","objectMerge","truncate","objectFrozen","hasKey","joinRegExp","urlencode","uuid4","htmlTreeAsString","isSameException","isSameStacktrace","parseUrl","fill","supportsFetch","supportsReferrerPolicy","serializeKeysForMessage","serializeException","sanitize","wrapConsoleMethod","wrapMethod","dsnKeys","split","dsnPattern","now","Date","_window","window","global","self","_document","document","_navigator","navigator","keepOriginalCallback","original","callback","data","Raven","_hasJSON","JSON","_hasDocument","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","release","SENTRY_RELEASE","id","logger","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","headers","collectWindowErrors","captureUnhandledRejections","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","sanitizeKeys","_fetchDefaults","method","referrerPolicy","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","Error","_originalConsole","console","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","location","_lastHref","href","_resetBackoff","prototype","VERSION","debug","config","dsn","options","_logDebug","globalOptions","key","value","setDSN","push","length","maxBreadcrumbs","Math","max","min","autoBreadcrumbDefaults","xhr","dom","sentry","toString","call","instrumentDefaults","tryCatch","install","isSetup","report","subscribe","_handleOnErrorStackInfo","apply","arguments","_attachPromiseRejectionHandler","_patchFunctionToString","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","path","lastIndexOf","substr","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","args","wrap","_before","undefined","__raven__","__raven_wrapper__","e","wrapped","i","deep","_ignoreNextOnError","captureException","property","__orig__","uninstall","_detachPromiseRejectionHandler","_unpatchFunctionToString","_restoreBuiltIns","_restoreConsole","_promiseRejectionHandler","event","reason","mechanism","type","handled","bind","addEventListener","removeEventListener","ex","trimHeadFrames","error","name","message","captureMessage","stacktrace","_getCaptureExceptionOptionsFromPlainObject","stack","computeStackTrace","_handleStackInfo","ex1","currentOptions","exKeys","Object","keys","sort","fingerprint","extra","__serialized__","msg","test","initialCall","fileurl","url","frames","_prepareFrames","reverse","_send","captureBreadcrumb","obj","crumb","timestamp","breadcrumbCallback","result","shift","addPlugin","plugin","pluginArgs","slice","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","showReportDialog","eventId","encode","encodeURIComponent","encodedOptions","email","globalServer","script","createElement","async","src","join","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","toLowerCase","_breadcrumbEventHandler","evtName","target","category","_keypressEventHandler","debounceDuration","tagName","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parsedTo","parsedFrom","protocol","host","relative","_originalFunctionToString","Function","wrappedBuiltIns","wrapTimeFn","orig","fn","t","Array","originalCallback","function","wrapEventTarget","proto","hasOwnProperty","capture","secure","handleEvent","handler","err","before","clickHandler","keypressHandler","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","j","onreadystatechange","origFetch","fetchInput","Request","fetchData","then","response","level","attachEvent","chrome","isChromePackagedApp","app","runtime","hasPushAndReplaceState","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","log","consoleMethodCallback","_","builtin","installer","concat","str","m","exec","allowSecretKey","port","stackInfo","_processException","lineno","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","filename","line","colno","column","prefixedMessage","exception","values","transaction","_trimPacket","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProps","urlProp","_getHttpData","httpData","userAgent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","Boolean","_setBackoffState","retry","get","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","_sanitizeData","forEach","random","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","success","onError","failure","opts","evaluatedHeaders","evaluatedFetchParameters","_evaluateHash","fetchParameters","defaultFetchOptions","fetchOptions","fetch","ok","hasCORS","XDomainRequest","replace","onload","onerror","open","setRequestHeader","send","hash","evaluated","setUser","setReleaseContext","module","exports"],"sources":["/Users/viacheslv/devlop/aivazynPay/client/node_modules/raven-js/src/raven.js"],"sourcesContent":["/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar md5 = require('../vendor/md5/md5');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.27.2',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._detachPromiseRejectionHandler();\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n    this._restoreConsole();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function(event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function() {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener &&\n      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function() {\n    _window.removeEventListener &&\n      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function(ex, options) {\n    options = objectMerge({trimHeadFrames: 0}, options ? options : {});\n\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n\n      return this.captureMessage(\n        message,\n        objectMerge(options, {\n          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n          // but it's barely any overhead so we may at least try\n          stacktrace: true,\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(\n        ex,\n        objectMerge(options, {\n          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    }\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message:\n        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n\n    return options;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge(\n      {\n        message: msg\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n\n    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n\n      options = objectMerge(\n        {\n          trimHeadFrames: 0\n        },\n        options\n      );\n      // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n      options.trimHeadFrames += 1;\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Make sure that fingerprint is always wrapped in an array\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint)\n        ? data.fingerprint\n        : [data.fingerprint];\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = objectMerge(\n      {\n        eventId: this.lastEventId(),\n        dsn: this._dsn,\n        user: this._globalContext.user || {}\n      },\n      options\n    );\n\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: orig.name || '<anonymous>'}\n              }\n            },\n            originalCallback\n          );\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          target: global,\n                          function: 'handleEvent',\n                          handler: (fn && fn.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    fn.handleEvent\n                  );\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(\n                  {\n                    mechanism: {\n                      type: 'instrument',\n                      data: {\n                        target: global,\n                        function: 'addEventListener',\n                        handler: (fn && fn.name) || '<anonymous>'\n                      }\n                    }\n                  },\n                  fn,\n                  before\n                ),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(\n              self.wrap(\n                {\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      function: 'requestAnimationFrame',\n                      handler: (orig && orig.name) || '<anonymous>'\n                    }\n                  }\n                },\n                cb\n              )\n            );\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}\n              }\n            },\n            orig\n          );\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          function: 'onreadystatechange',\n                          handler: (orig && orig.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    orig,\n                    onreadystatechangeHandler\n                  );\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            return origFetch\n              .apply(this, args)\n              .then(function(response) {\n                fetchData.status_code = response.status;\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData\n                });\n\n                return response;\n              })\n              ['catch'](function(err) {\n                // if there is an error performing the request\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData,\n                  level: 'error'\n                });\n\n                throw err;\n              });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      _window.history.pushState &&\n      _window.history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _restoreConsole: function() {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function(stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    };\n\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        transaction: fileurl\n      },\n      options\n    );\n\n    var ex = data.exception.values[0];\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    }\n\n    // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n\n    data.exception.mechanism = objectMerge(\n      {\n        type: 'generic',\n        handled: true\n      },\n      data.exception.mechanism || {}\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.transaction !== last.transaction // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    } else if (current.fingerprint || last.fingerprint) {\n      return Boolean(current.fingerprint && last.fingerprint) &&\n        JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint)\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    data = this._sanitizeData(data);\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function(key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _sanitizeData: function(data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHash: function(hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n\n  _logDebug: function(level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (\n      this._originalConsoleMethods[level] &&\n      (this.debug || this._globalOptions.debug)\n    ) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}